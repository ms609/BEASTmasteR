% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mk_ParsimonyInformative_v1.R
\name{list_unobservable_patterns_ParsInf}
\alias{list_unobservable_patterns_ParsInf}
\title{assumed_nstates MrBayes (as of this writing) appears to only actually have code for
MkParsInf for binary characters. What it is doing for non-binary characters (3 states, 4 states, etc.)
is unknown, but it may be only correcting for the patterns as if it were a binary character.
By setting assumed_nstates=2, only the patterns for a binary character will be generated -- i.e.,
nstates will be reset to assumed nstates. Default: assumed_nstates=nstates.}
\usage{
list_unobservable_patterns_ParsInf(
  ntaxa,
  nstates,
  printflag = TRUE,
  max_num_patterns = 2500,
  ordering = "unordered",
  assumed_nstates = nstates
)
}
\description{
assumed_nstates MrBayes (as of this writing) appears to only actually have code for
MkParsInf for binary characters. What it is doing for non-binary characters (3 states, 4 states, etc.)
is unknown, but it may be only correcting for the patterns as if it were a binary character.
By setting assumed_nstates=2, only the patterns for a binary character will be generated -- i.e.,
nstates will be reset to assumed nstates. Default: assumed_nstates=nstates.
}
